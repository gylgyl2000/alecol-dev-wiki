"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[6828],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return t?o.createElement(g,s(s({ref:n},l),{},{components:t})):o.createElement(g,s({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=u;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var c=2;c<i;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5162:(e,n,t)=>{t(7294)},5488:(e,n,t)=>{t(7294),t(2389)},4454:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));t(5488),t(5162);const i={sidebar_position:3},s="app.js",a={unversionedId:"Frontend_Application/Application/App_js",id:"Frontend_Application/Application/App_js",title:"app.js",description:"",source:"@site/docs/3-Frontend_Application/Application/3-App_js.mdx",sourceDirName:"3-Frontend_Application/Application",slug:"/Frontend_Application/Application/App_js",permalink:"/alecol-dev-wiki/docs/Frontend_Application/Application/App_js",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/3-Frontend_Application/Application/3-App_js.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"FrontendSidebar",previous:{title:"index.js",permalink:"/alecol-dev-wiki/docs/Frontend_Application/Application/Index_js"},next:{title:"Contextes",permalink:"/alecol-dev-wiki/docs/Frontend_Application/Application/Contextes/contexts"}},p={},c=[],l={toc:c};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"appjs"},"app.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/my-app/App.js"',title:'"./src/my-app/App.js"'},'import React, { useContext, useEffect, useState } from "react";\nimport { BrowserRouter as Router, Switch, Route } from "react-router-dom";\nimport Matieres from "../Components/organisms/matiere/Matieres";\nimport Themes from "../Components/organisms/theme/Themes";\nimport Competences from "../Components/organisms/competence/Competences";\nimport Exercices from "../Components/organisms/exercice/Exercices";\nimport Questions from "../Components/organisms/question/Questions";\n\nimport Header from "../Components/molecules/header/Header";\nimport NavBar from "../Components/molecules/navBar/NavBar";\n\nimport "./App.css";\nimport Register from "../Components/organisms/register/Register";\nimport Signin from "../Components/organisms/signin/Signin";\nimport PrivateRoute from "../Components/atoms/privateRoute/PrivateRoute";\nimport PublicRoute from "../Components/atoms/publicRoute/PublicRoute";\nimport CircularProgress from "@material-ui/core/CircularProgress";\n\nimport { UserContext } from "../contexts/UserContext";\nimport Services from "../services";\nimport Home from "../Components/organisms/home/Home";\nimport Exit from "../Components/atoms/exit/Exit";\nimport Selection from "../Components/organisms/selection/Selection";\n\nconst App = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const checkUserAuth = () => {\n    Services.EleveService.getUserFromToken({\n      token: localStorage.getItem("token"),\n    })\n      .then((res) => {\n        setUser({\n          id: res.data.id,\n          prenom: res.data.prenom,\n          isLoggedIn: true,\n        });\n\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    checkUserAuth();\n  }, []);\n\n  if (!isLoading) {\n    return (\n      <div className="App">\n        <Router>\n          <Switch>\n            <PublicRoute isLoggedIn={User.isLoggedIn} exact path="/">\n              <Header />\n              <NavBar />\n            </PublicRoute>\n\n            <PublicRoute isLoggedIn={User.isLoggedIn} path="/inscription">\n              <Register />\n            </PublicRoute>\n\n            <PublicRoute isLoggedIn={User.isLoggedIn} path="/connexion">\n              <Signin />\n            </PublicRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/home">\n              <Home />\n              <Exit />\n            </PrivateRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/selection">\n              <Selection />\n              <Exit />\n            </PrivateRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/matieres">\n              <Header />\n              <Matieres />\n              <NavBar />\n            </PrivateRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/themes">\n              <Header />\n              <Themes />\n              <NavBar />\n            </PrivateRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/competences">\n              <Header />\n              <Competences />\n              <NavBar />\n            </PrivateRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/exercices">\n              <Exercices />\n              <Exit />\n            </PrivateRoute>\n\n            <PrivateRoute isLoggedIn={User.isLoggedIn} path="/questions">\n              <Questions />\n              <Exit />\n            </PrivateRoute>\n          </Switch>\n        </Router>\n      </div>\n    );\n  } else {\n    return (\n      <div className="loading__container">\n        <CircularProgress className="loading__circularProgress" />\n      </div>\n    );\n  }\n};\n\nexport default App;\n')))}m.isMDXComponent=!0}}]);