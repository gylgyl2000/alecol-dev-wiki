"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[6986],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>p});var t=n(7294);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function c(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=t.createContext({}),a=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=a(e.components);return t.createElement(i.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},v=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,c=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),v=a(n),p=s,m=v["".concat(i,".").concat(p)]||v[p]||d[p]||c;return n?t.createElement(m,l(l({ref:r},u),{},{components:n})):t.createElement(m,l({ref:r},u))}));function p(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var c=n.length,l=new Array(c);l[0]=v;var o={};for(var i in r)hasOwnProperty.call(r,i)&&(o[i]=r[i]);o.originalType=e,o.mdxType="string"==typeof e?e:s,l[1]=o;for(var a=2;a<c;a++)l[a]=n[a];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}v.displayName="MDXCreateElement"},9465:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var t=n(3117),s=(n(7294),n(3905));const c={},l="Score \xe9l\xe8ves",o={unversionedId:"Backend_Serveur/Sources/MPD_exercices/ScoreEleves",id:"Backend_Serveur/Sources/MPD_exercices/ScoreEleves",title:"Score \xe9l\xe8ves",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/3-MPD_exercices/14-ScoreEleves.mdx",sourceDirName:"2-Backend_Serveur/Sources/3-MPD_exercices",slug:"/Backend_Serveur/Sources/MPD_exercices/ScoreEleves",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/ScoreEleves",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/3-MPD_exercices/14-ScoreEleves.mdx",tags:[],version:"current",sidebarPosition:14,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"R\xe9ponses dessin \xe0 points",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/ReponsesDessinPoints"},next:{title:"Type exercice",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/TypeExo"}},i={},a=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],u={toc:a};function d(e){let{components:r,...n}=e;return(0,s.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"score-\xe9l\xe8ves"},"Score \xe9l\xe8ves"),(0,s.kt)("h2",{id:"service"},"Service"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.score_eleves.service.js"',title:'"./src/services/alecol.score_eleves.service.js"'},'import http from "../http-common";\n\nclass ScoreElevesDataService {\n    getAll() {\n        return http.get("/scoreEleves");\n    }\n\n    get(id) {\n        return http.get(`/scoreEleves/${id}`);\n    }\n\n    findByEleveId(fk_eleve_id) {\n        return http.get(`/scoreEleves?fk_eleve_id=${fk_eleve_id}`);\n    }\n\n    findByExoId(fk_exercices_id) {\n        return http.get(`/scoreEleves?fk_exercices_id=${fk_exercices_id}`);\n    }\n}\n\nexport default new ScoreElevesDataService();\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'const ScoreElevesService = require("./alecol.score_eleves.service");\n...\nconst Services = {};\n...\nServices.ScoreElevesService = ScoreElevesService.default;\n...\nexport default Services;\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/score_eleves.model.js"',title:'"./src/models/score_eleves.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const ScoreEleves = sequelize.define("score_eleves", {\n        id: {\n            type: Sequelize.INTEGER,\n            primaryKey: true,\n        },\n        FK_eleve_id: {\n            type: Sequelize.INTEGER,\n            references: {\n            model: "eleve",\n            key: "id",\n            },\n        },\n        FK_exercices_id: {\n            type: Sequelize.STRING,\n            references: {\n            model: "exercices",\n            key: "pk_exo_id",\n            },\n        },\n        nb_iter: {\n            type: Sequelize.INTEGER,\n        },\n        last_score: {\n            type: Sequelize.FLOAT,\n        },\n        last_time: {\n            type: Sequelize.TIME,\n        },\n        best_score: {\n            type: Sequelize.FLOAT,\n        },\n        best_time: {\n            type: Sequelize.TIME,\n        },\n    });\n  \n    return ScoreEleves;\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.score_eleves = require("./score_eleves.model")(sequelize, Sequelize);\n...\n// score_eleves => eleve\ndb.eleves.hasMany(db.score_eleves, { foreignKey: "FK_eleve_id" });\ndb.score_eleves.belongsTo(db.eleves, { foreignKey: "FK_eleve_id" });\n\n// score_eleves => exercices\ndb.exercices.hasMany(db.score_eleves, { foreignKey: "FK_exercices_id" });\ndb.score_eleves.belongsTo(db.exercices, { foreignKey: "FK_exercices_id" })\n...\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.score_eleves.controllers.js"',title:'"./src/controllers/alecol.score_eleves.controllers.js"'},'const db = require("../models");\nconst Score = db.score_trous;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les scores de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const eleveId = req.query.fk_eleve_id;\n\n    var condition = eleveId ? { FK_eleve_id: { [Op.like]: `${eleveId}` } } : null;\n\n    Score.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des scores.",\n            });\n        });\n};\n\n// Trouver un seul score avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Score.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration du score avec l\'id=" + id,\n            });\n        });\n};\n\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"route"},"Route"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.score_eleves.routes.js"',title:'"./src/routes/alecol.score_eleves.routes.js"'},'module.exports = (app) => {\n    const score_eleves = require("../controllers/alecol.score_eleves.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer tous les scores\n    router.get("/", score_eleves.findAll);\n\n    // R\xe9cup\xe9rer un seul score avec id\n    router.get("/:id", score_eleves.findOne);\n\n    app.use("/api/scoreEleves", router);\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.score_eleves.routes")(app);\n...\n')))}d.isMDXComponent=!0}}]);