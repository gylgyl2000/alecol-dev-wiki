"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[7166],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(7294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(r),u=c,v=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return r?n.createElement(v,a(a({ref:t},p),{},{components:r})):n.createElement(v,a({ref:t},p))}));function u(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:c,a[1]=s;for(var i=2;i<o;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4870:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=r(7462),c=(r(7294),r(3905));const o={},a="Cat\xe9gorie de comp\xe9tences",s={unversionedId:"Backend_Serveur/Sources/MPD_Competences/CatComp",id:"Backend_Serveur/Sources/MPD_Competences/CatComp",title:"Cat\xe9gorie de comp\xe9tences",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/2-MPD_Competences/2-CatComp.mdx",sourceDirName:"2-Backend_Serveur/Sources/2-MPD_Competences",slug:"/Backend_Serveur/Sources/MPD_Competences/CatComp",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/CatComp",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/2-MPD_Competences/2-CatComp.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"M\xe9ta comp\xe9tence",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/MetaComp"},next:{title:"Comp\xe9tence g\xe9n\xe9rale",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/C_CC_CG"}},l={},i=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],p={toc:i};function m(e){let{components:t,...r}=e;return(0,c.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"cat\xe9gorie-de-comp\xe9tences"},"Cat\xe9gorie de comp\xe9tences"),(0,c.kt)("h2",{id:"service"},"Service"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.catcomp.service.js"',title:'"./src/services/alecol.catcomp.service.js"'},'import http from "../http-common";\n\nclass CatCompDataService {\n    getAll() {\n        return http.get("/catcomp");\n    }\n\n    get(id) {\n        return http.get(`/catcomp/${id}`);\n    }\n\n    findByMetaCompId(fk_mc_id) {\n        return http.get(`/catcomp?fk_mc_id=${fk_mc_id}`);\n    }\n}\n\nexport default new CatCompDataService();\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'...\nconst CatCompService = require("./alecol.catcomp.service");\n...\nconst Services = {};\n...\nServices.CatCompService = CatCompService.default;\n...\nexport default Services;\n')),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/catcomp.model.js"',title:'"./src/models/catcomp.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const CatComp = sequelize.define("catcomp", {\n        id: {\n            type: Sequelize.STRING,\n            primaryKey: true,\n        },\n        nom: {\n            type: Sequelize.STRING,\n        },\n        fk_mc_id: {\n            type: Sequelize.STRING,\n            references: {\n                model: "metacomp",\n                key: "id",\n            },\n        },\n    });\n\n    return CatComp;\n};\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.catcomp = require("./catcomp.model")(sequelize, Sequelize);\n...\ndb.metacomp.hasMany(db.catcomp, { foreignKey: "fk_mc_id" });\ndb.catcomp.belongsTo(db.metacomp, { foreignKey: "fk_mc_id" });\n...\n')),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.catcomp.controllers.js"',title:'"./src/controllers/alecol.catcomp.controllers.js"'},'const db = require("../models");\nconst CatComp = db.catcomp;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les cat\xe9gories de comp\xe9tences de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const fk_mc_id = req.query.fk_mc_id;\n\n    var nameCondition = fk_mc_id\n        ? { fk_mc_id: { [Op.like]: `${fk_mc_id}` } }\n        : null;\n\n    var condition = nameCondition;\n\n    CatComp.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des cat\xe9gories de comp\xe9tences.",\n            });\n        });\n};\n\n// Trouver une seule cat\xe9gorie de comp\xe9tences avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    CatComp.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de la cat\xe9gorie de comp\xe9tences avec l\'id=" + id,\n            });\n        });\n};\n')),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"route"},"Route"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.catcomp.routes.js"',title:'"./src/routes/alecol.catcomp.routes.js"'},'module.exports = (app) => {\n    const catcomp = require("../controllers/alecol.catcomp.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les cat\xe9gories de comp\xe9tences\n    router.get("/", catcomp.findAll);\n\n    // R\xe9cup\xe9rer une seule cat\xe9gorie de comp\xe9tence avec id\n    router.get("/:id", catcomp.findOne);\n\n    app.use("/api/catcomp", router);\n};\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.catcomp.routes")(app);\n...\n')))}m.isMDXComponent=!0}}]);