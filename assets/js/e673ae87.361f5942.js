"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[4624],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>x});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var a=n.createContext({}),i=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=i(r),x=s,m=d["".concat(a,".").concat(x)]||d[x]||u[x]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function x(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,l=new Array(o);l[0]=d;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:s,l[1]=c;for(var i=2;i<o;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8737:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var n=r(3117),s=(r(7294),r(3905));const o={},l="R\xe9ponse texte",c={unversionedId:"Backend_Serveur/Sources/MPD_exercices/RepTxt",id:"Backend_Serveur/Sources/MPD_exercices/RepTxt",title:"R\xe9ponse texte",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/3-MPD_exercices/7-RepTxt.mdx",sourceDirName:"2-Backend_Serveur/Sources/3-MPD_exercices",slug:"/Backend_Serveur/Sources/MPD_exercices/RepTxt",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/RepTxt",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/3-MPD_exercices/7-RepTxt.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"Exercices",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/Exercices"},next:{title:"R\xe9ponse image",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/RepImg"}},a={},i=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],p={toc:i};function u(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"r\xe9ponse-texte"},"R\xe9ponse texte"),(0,s.kt)("h2",{id:"service"},"Service"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.Rep_txt.service.js"',title:'"./src/services/alecol.Rep_txt.service.js"'},'import http from "../http-common";\n\nclass ReponsesTxtDataService {\n    getAll() {\n        return http.get("/reponsesTxt");\n    }\n\n    get(id) {\n        return http.get(`/reponsesTxt/${id}`);\n    }\n\n    findByNom(Reponse_Text) {\n        return http.get(`/reponsesTxt?Reponse_Text=${Reponse_Text}`);\n    }\n}\n\nexport default new ReponsesTxtDataService();\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'const ReponsesTxtService = require("./alecol.Rep_txt.service");\n...\nconst Services = {};\n...\nServices.RepTxtService = ReponsesTxtService.default;\n...\nexport default Services;\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/Rep_txt.model.js"',title:'"./src/models/Rep_txt.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const Rep_txt = sequelize.define("rep_txt", {\n        ID: {\n            type: Sequelize.INTEGER,\n            primaryKey: true,\n        },\n        Reponse_Text: {\n            type: Sequelize.STRING,\n        },\n    });\n\n    return Rep_txt;\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.Rep_txt = require("./Rep_txt.model")(sequelize, Sequelize);\n...\n\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.Rep_txt.controllers.js"',title:'"./src/controllers/alecol.Rep_txt.controllers.js"'},'const db = require("../models");\nconst Reponse = db.Rep_txt;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les r\xe9ponses texte de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const repText = req.query.Reponse_Text;\n\n    var condition = repText\n        ? { Reponse_Text: { [Op.like]: `${repText}` } }\n        : null;\n\n    Reponse.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des r\xe9ponses texte.",\n            });\n        });\n};\n\n// Trouver une seule r\xe9ponse texte avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Reponse.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de la r\xe9ponse texte avec l\'id=" + id,\n            });\n        });\n};\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"route"},"Route"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.Rep_txt.routes.js"',title:'"./src/routes/alecol.Rep_txt.routes.js"'},'module.exports = (app) => {\n    const Rep_txt = require("../controllers/alecol.Rep_txt.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les r\xe9ponses texte\n    router.get("/", Rep_txt.findAll);\n\n    // R\xe9cup\xe9rer une seule r\xe9ponse texte avec id\n    router.get("/:id", Rep_txt.findOne);\n\n    app.use("/api/reponsesTxt", router);\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.Rep_txt.routes")(app);\n...\n')))}u.isMDXComponent=!0}}]);