"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[166],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>m});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),c=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,v=d["".concat(i,".").concat(m)]||d[m]||p[m]||s;return r?t.createElement(v,o(o({ref:n},u),{},{components:r})):t.createElement(v,o({ref:n},u))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5026:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=r(3117),a=(r(7294),r(3905));const s={},o="Parent",l={unversionedId:"Backend_Serveur/Sources/MPD_Eleve/Parent",id:"Backend_Serveur/Sources/MPD_Eleve/Parent",title:"Parent",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/1-MPD_Eleve/1-Parent.mdx",sourceDirName:"2-Backend_Serveur/Sources/1-MPD_Eleve",slug:"/Backend_Serveur/Sources/MPD_Eleve/Parent",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Eleve/Parent",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/1-MPD_Eleve/1-Parent.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"src",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/src"},next:{title:"Parent => enfant",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Eleve/Parent_has_enfant"}},i={},c=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],u={toc:c};function p(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"parent"},"Parent"),(0,a.kt)("h2",{id:"service"},"Service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.parent.service.js"',title:'"./src/services/alecol.parent.service.js"'},'import http from "../http-common";\n\nclass ParentDataService {\n    getAll() {\n        return http.get("/parent");\n    }\n\n    get(id) {\n        return http.get(`/parent/${id}`);\n    }\n\n    post(data) {\n        return http.post("/parent", data);\n    }\n\n    findByNom(nom) {\n        return http.get(`/parent?nom=${nom}`);\n    }\n\n    findByEmail(email) {\n        return http.get(`/parent?email=${email}`);\n    }\n\n    login(data) {\n        return http.post("/parent/login", data);\n    }\n\n    getUserFromToken(token) {\n        return http.post("/parent/getUser", token);\n    }\n}\n\nexport default new ParentDataService();\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'...\nconst ParentService = require("./alecol.parent.service");\n...\nconst Services = {};\n...\nServices.ParentService = ParentService.default;\n...\nexport default Services;\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/parent.model.js"',title:'"./src/models/parent.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const Parent = sequelize.define("parent", {\n        id: {\n            type: Sequelize.INTEGER,\n            primaryKey: true,\n            autoIncrement: true,\n        },\n        nom: {\n            type: Sequelize.STRING,\n        },\n        prenom: {\n            type: Sequelize.STRING,\n        },\n        email: {\n            type: Sequelize.STRING,\n        },\n        password: {\n            type: Sequelize.STRING,\n        },\n    });\n\n    return Parent;\n};\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.parents = require("./parent.model")(sequelize, Sequelize);\n...\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.parent.controllers.js"',title:'"./src/controllers/alecol.parent.controllers.js"'},'const bcrypt = require("bcryptjs");\nvar jwt = require("jsonwebtoken");\n\nconst db = require("../models");\nconst Parent = db.parents;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer tous les parents de la base de donn\xe9es.\nexports.findAll = (req, res) => {\n    const email = req.query.email;\n\n    var condition = email ? { email: { [Op.like]: `${email}` } } : null;\n\n    Parent.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des Parents.",\n            });\n        });\n};\n\n// Trouver un seul parent avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Parent.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration du parent avec l\'id=" + id,\n            });\n        });\n};\n\nexports.postOne = (req, res) => {\n    let data = req.body;\n\n    data = { ...data};\n\n    Parent.create(data)\n        .then(() => {\n            res.send("Inscription r\xe9ussi");\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur d\'enregistrement",\n            });\n        });\n};\n\nexports.loginParent = (req, res) => {\n    const email = req.body.email;\n    const password = req.body.password;\n\n    var condition = email ? { email: { [Op.like]: `${email}` } } : null;\n\n    Parent.findAll({ where: condition }).then((data) => {\n        if (\n            data[0].email === email &&\n            bcrypt.compareSync(password, data[0].password)\n        ) {\n            const token = jwt.sign({ id: data[0].id, nom: data[0].nom }, "MA_CLE", {\n                expiresIn: "1h",\n            });\n\n            res.status(200).send({ token: token });\n        }\n    });\n};\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"route"},"Route"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.parent.routes.js"',title:'"./src/routes/alecol.parent.routes.js"'},'const checkAuth = require("../middleware/auth_middleware");\n\nmodule.exports = (app) => {\n    const parents = require("../controllers/alecol.parent.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer tous les parents\n    router.get("/", parents.findAll);\n\n    // Poster un parent\n    router.post("/", parents.postOne);\n\n    // R\xe9cup\xe9rer un seul parent avec un id\n    router.get("/:id", parents.findOne);\n\n    router.post("/login", parents.loginParent);\n\n    router.post("/getUser", checkAuth);\n\n    app.use("/api/parent", router);\n};\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.parent.routes")(app);\n...\n')))}p.isMDXComponent=!0}}]);