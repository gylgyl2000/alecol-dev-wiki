"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[9566],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},m=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=i(r),d=o,v=u["".concat(l,".").concat(d)]||u[d]||p[d]||a;return r?n.createElement(v,c(c({ref:t},m),{},{components:r})):n.createElement(v,c({ref:t},m))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<a;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4266:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=r(3117),o=(r(7294),r(3905));const a={},c="M\xe9ta comp\xe9tence",s={unversionedId:"Backend_Serveur/Sources/MPD_Competences/MetaComp",id:"Backend_Serveur/Sources/MPD_Competences/MetaComp",title:"M\xe9ta comp\xe9tence",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/2-MPD_Competences/1-MetaComp.mdx",sourceDirName:"2-Backend_Serveur/Sources/2-MPD_Competences",slug:"/Backend_Serveur/Sources/MPD_Competences/MetaComp",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/MetaComp",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/2-MPD_Competences/1-MetaComp.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"Classe => le\xe7on",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Eleve/Classe_lesson"},next:{title:"Cat\xe9gorie de comp\xe9tences",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/CatComp"}},l={},i=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],m={toc:i};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"m\xe9ta-comp\xe9tence"},"M\xe9ta comp\xe9tence"),(0,o.kt)("h2",{id:"service"},"Service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.metacomp.service.js"',title:'"./src/services/alecol.metacomp.service.js"'},'import http from "../http-common";\n\nclass MetaCompDataService {\n    getAll() {\n        return http.get("/metacomp");\n    }\n\n    get(id) {\n        return http.get(`/metacomp/${id}`);\n    }\n\n    findByMatiereId(fk_matiere_id) {\n        return http.get(`/metacomp?fk_matiere_id=${fk_matiere_id}`);\n    }\n}\n\nexport default new MetaCompDataService();\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'...\nconst MetaCompService = require("./alecol.metacomp.service");\n...\nconst Services = {};\n...\nServices.MetaCompService = MetaCompService.default;\n...\nexport default Services;\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/metacomp.model.js"',title:'"./src/models/metacomp.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const MetaComp = sequelize.define("metacomp", {\n        id: {\n            type: Sequelize.STRING,\n            primaryKey: true,\n        },\n        nom: {\n            type: Sequelize.STRING,\n        },\n        fk_matiere_id: {\n            type: Sequelize.STRING,\n            references: {\n                model: "matiere",\n                key: "id",\n            },\n        },\n    });\n\n    return MetaComp;\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.metacomp = require("./metacomp.model")(sequelize, Sequelize);\n...\ndb.matieres.hasMany(db.metacomp, { foreignKey: "fk_matiere_id" });\ndb.metacomp.belongsTo(db.matieres, { foreignKey: "fk_matiere_id" });\n...\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.metacomp.controllers.js"',title:'"./src/controllers/alecol.metacomp.controllers.js"'},'const db = require("../models");\nconst Metacomp = db.metacomp;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les m\xe9ta comp\xe9tences de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const fk_matiere_id = req.query.fk_matiere_id;\n\n    var nameCondition = fk_matiere_id\n        ? { fk_matiere_id: { [Op.like]: `${fk_matiere_id}` } }\n        : null;\n\n    var condition = nameCondition;\n\n    Metacomp.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des M\xe9ta comp\xe9tences.",\n            });\n        });\n};\n\n// Trouver une seule m\xe9ta comp\xe9tence avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Metacomp.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de la m\xe9ta comp\xe9tence avec l\'id=" + id,\n            });\n        });\n};\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"route"},"Route"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.metacomp.routes.js"',title:'"./src/routes/alecol.metacomp.routes.js"'},'module.exports = (app) => {\n    const metacomp = require("../controllers/alecol.metacomp.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les m\xe9ta comp\xe9tences\n    router.get("/", metacomp.findAll);\n\n    // R\xe9cup\xe9rer une seule m\xe9ta comp\xe9tence avec id\n    router.get("/:id", metacomp.findOne);\n\n    app.use("/api/metacomp", router);\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.metacomp.routes")(app);\n...\n')))}p.isMDXComponent=!0}}]);