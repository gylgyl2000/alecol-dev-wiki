"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[9645],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>m});var s=n(7294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,s,t=function(e,r){if(null==e)return{};var n,s,t={},l=Object.keys(e);for(s=0;s<l.length;s++)n=l[s],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(s=0;s<l.length;s++)n=l[s],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=s.createContext({}),i=function(e){var r=s.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},u=function(e){var r=i(e.components);return s.createElement(c.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return s.createElement(s.Fragment,{},r)}},p=s.forwardRef((function(e,r){var n=e.components,t=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=i(n),m=t,v=p["".concat(c,".").concat(m)]||p[m]||d[m]||l;return n?s.createElement(v,a(a({ref:r},u),{},{components:n})):s.createElement(v,a({ref:r},u))}));function m(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var l=n.length,a=new Array(l);a[0]=p;var o={};for(var c in r)hasOwnProperty.call(r,c)&&(o[c]=r[c]);o.originalType=e,o.mdxType="string"==typeof e?e:t,a[1]=o;for(var i=2;i<l;i++)a[i]=n[i];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8235:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var s=n(3117),t=(n(7294),n(3905));const l={},a="Classe",o={unversionedId:"Backend_Serveur/Sources/MPD_Eleve/Classe",id:"Backend_Serveur/Sources/MPD_Eleve/Classe",title:"Classe",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/1-MPD_Eleve/4-Classe.mdx",sourceDirName:"2-Backend_Serveur/Sources/1-MPD_Eleve",slug:"/Backend_Serveur/Sources/MPD_Eleve/Classe",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Eleve/Classe",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/1-MPD_Eleve/4-Classe.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"\xc9l\xe8ve",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Eleve/Eleve"},next:{title:"Professeur",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Eleve/Professeur"}},c={},i=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],u={toc:i};function d(e){let{components:r,...n}=e;return(0,t.kt)("wrapper",(0,s.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"classe"},"Classe"),(0,t.kt)("h2",{id:"service"},"Service"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.classe.service.js"',title:'"./src/services/alecol.classe.service.js"'},'import http from "../http-common";\n\nclass ClasseDataService {\n    getAll() {\n        return http.get("/classes");\n    }\n\n    get(id) {\n        return http.get(`/classes/${id}`);\n    }\n\n    findByNom(nom) {\n        return http.get(`/classes?nom=${nom}`);\n    }\n}\n\nexport default new ClasseDataService();\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'...\nconst ClasseService = require("./alecol.classe.service");\n...\nconst Services = {};\n...\nServices.ClasseService = ClasseService.default;\n...\nexport default Services;\n')),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/classe.model.js"',title:'"./src/models/classe.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const Classe = sequelize.define("classe", {\n        id: {\n            type: Sequelize.STRING,\n            primaryKey: true,\n        },\n        nom: {\n            type: Sequelize.STRING,\n        },\n    });\n\n    return Classe;\n};\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.classes = require("./classe.model")(sequelize, Sequelize);\n...\n\n/**\n * cr\xe9er des d\xe9pendances entre les mod\xe8les\n */\n\ndb.classes.belongsToMany(db.lessons, {\n    through: "classe_lesson",\n    foreignKey: "classe_id",\n});\ndb.lessons.belongsToMany(db.classes, {\n    through: "classe_lesson",\n    foreignKey: "lesson_id",\n});\n')),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.classe.controllers.js"',title:'"./src/controllers/alecol.classe.controllers.js"'},'const db = require("../models");\nconst Classe = db.classes;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les classes de la base de donn\xe9es.\nexports.findAll = (req, res) => {\n    const nom = req.query.nom;\n\n    var nameCondition = nom ? { nom: { [Op.like]: `${nom}` } } : null;\n\n    var condition = nameCondition;\n\n    Classe.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Some error occurred while retrieving Exercices.",\n            });\n        });\n};\n\n// Trouver une seule classe avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Classe.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Error retrieving Exercice with id=" + id,\n            });\n        });\n};\n')),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"route"},"Route"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.classe.routes.js"',title:'"./src/routes/alecol.classe.routes.js"'},'module.exports = (app) => {\n    const classes = require("../controllers/alecol.classe.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les classes\n    router.get("/", classes.findAll);\n\n    // R\xe9cup\xe9rer une seule classe avec id\n    router.get("/:id", classes.findOne);\n\n    app.use("/api/classes", router);\n};\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.classe.routes")(app);\n...\n')))}d.isMDXComponent=!0}}]);