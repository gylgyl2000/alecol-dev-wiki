"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[1630],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>p});var t=r(7294);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=t.createContext({}),c=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(o.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),p=s,g=d["".concat(o,".").concat(p)]||d[p]||m[p]||a;return r?t.createElement(g,i(i({ref:n},u),{},{components:r})):t.createElement(g,i({ref:n},u))}));function p(e,n){var r=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},147:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(3117),s=(r(7294),r(3905));const a={},i="Images",l={unversionedId:"Backend_Serveur/Sources/MPD_exercices/Images",id:"Backend_Serveur/Sources/MPD_exercices/Images",title:"Images",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/3-MPD_exercices/18-Images.mdx",sourceDirName:"2-Backend_Serveur/Sources/3-MPD_exercices",slug:"/Backend_Serveur/Sources/MPD_exercices/Images",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/Images",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/3-MPD_exercices/18-Images.mdx",tags:[],version:"current",sidebarPosition:18,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"Le\xe7on",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/Lesson"}},o={},c=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],u={toc:c};function m(e){let{components:n,...r}=e;return(0,s.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"images"},"Images"),(0,s.kt)("h2",{id:"service"},"Service"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.images.service.js"',title:'"./src/services/alecol.images.service.js"'},'import http from "../http-common";\n\nclass ImagesDataService {\n    getAll() {\n        return http.get("/images");\n    }\n\n    get(id) {\n        return http.get(`/images/${id}`);\n    }\n\n    findByNom(nom) {\n        return http.get(`/images?nom=${nom}`);\n    }\n}\n\nexport default new ImagesDataService();\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'const ImageService = require("./alecol.images.service");\n...\nconst Services = {};\n...\nServices.ImageService = ImageService.default;\n...\nexport default Services;\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/images.model.js"',title:'"./src/models/images.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const Image = sequelize.define("images", {\n        id: {\n            type: Sequelize.INTEGER,\n            primaryKey: true,\n        },\n        nom: {\n            type: Sequelize.STRING,\n        },\n        categorie: {\n            type: Sequelize.STRING,\n        },\n        genre: {\n            type: Sequelize.STRING,\n        },\n        nombre: {\n            type: Sequelize.STRING,\n        },\n        premiere_lettre: {\n            type: Sequelize.STRING,\n        },\n        voyelle: {\n            type: Sequelize.BOOLEAN,\n        },\n        ensemble: {\n            type: Sequelize.STRING,\n        },\n        pluriel: {\n            type: Sequelize.STRING,\n        },\n        theme: {\n            type: Sequelize.STRING,\n        },\n        fichier: {\n            type: Sequelize.STRING,\n        },\n    });\n\n    return Image;\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.images = require("./images.model")(sequelize, Sequelize);\n...\n\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.images.controllers.js"',title:'"./src/controllers/alecol.images.controllers.js"'},'const db = require("../models");\nconst Images = db.images;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer tous les images de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const nom = req.query.nom;\n\n    var nameCondition = nom ? { nom: { [Op.like]: `${nom}` } } : null;\n\n    var condition = nameCondition;\n\n    Images.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des images.",\n            });\n        });\n};\n\n// Trouver un seul image avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Images.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de l\'image avec l\'id=" + id,\n            });\n        });\n};\n')),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"route"},"Route"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.images.routes.js"',title:'"./src/routes/alecol.images.routes.js"'},'module.exports = (app) => {\n    const images = require("../controllers/alecol.images.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les images\n    router.get("/", images.findAll);\n\n    // R\xe9cup\xe9rer une seule image avec id\n    router.get("/:id", images.findOne);\n\n    app.use("/api/images", router);\n};\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.images.routes")(app);\n...\n')))}m.isMDXComponent=!0}}]);