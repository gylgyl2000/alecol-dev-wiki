"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[5426],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),o=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=o(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),p=o(n),v=i,m=p["".concat(l,".").concat(v)]||p[v]||u[v]||c;return n?r.createElement(m,s(s({ref:t},d),{},{components:n})):r.createElement(m,s({ref:t},d))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=n.length,s=new Array(c);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var o=2;o<c;o++)s[o]=n[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var r=n(7462),i=(n(7294),n(3905));const c={},s="Activit\xe9",a={unversionedId:"Backend_Serveur/Sources/MPD_exercices/Activite",id:"Backend_Serveur/Sources/MPD_exercices/Activite",title:"Activit\xe9",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/3-MPD_exercices/5-Activite.mdx",sourceDirName:"2-Backend_Serveur/Sources/3-MPD_exercices",slug:"/Backend_Serveur/Sources/MPD_exercices/Activite",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/Activite",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/3-MPD_exercices/5-Activite.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"Comp\xe9tence sp\xe9cifique par activit\xe9",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/AC_CS"},next:{title:"Exercices",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/Exercices"}},l={},o=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],d={toc:o};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"activit\xe9"},"Activit\xe9"),(0,i.kt)("h2",{id:"service"},"Service"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.ac_clnt.service.js"',title:'"./src/services/alecol.ac_clnt.service.js"'},'import http from "../http-common";\n\nclass ActiviteDataService {\n    getAll() {\n        return http.get("/activite");\n    }\n\n    get(id) {\n        return http.get(`/activite/${id}`);\n    }\n\n    findByActivite(pk_ac_id) {\n        return http.get(`/activite?pk_ac_id=${pk_ac_id}`);\n    }\n\n    findByLesson(LessonId) {\n        return http.get(`/activite?lessonid=${LessonId}`);\n    }\n}\n\nexport default new ActiviteDataService();\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'const ActiviteService = require("./alecol.ac_clnt.service");\n...\nconst Services = {};\n...\nServices.ActiviteService = ActiviteService.default;\n...\nexport default Services;\n')),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/ac_clnt.model.js"',title:'"./src/models/ac_clnt.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const Activite = sequelize.define("ac_clnt", {\n        nom: {\n            type: Sequelize.STRING,\n        },\n        description: {\n            type: Sequelize.STRING,\n        },\n        objectif: {\n            type: Sequelize.STRING,\n        },\n        consigne: {\n            type: Sequelize.STRING,\n        },\n        typrep: {\n            type: Sequelize.STRING,\n            references: {\n                model: "type_exo",\n                key: "id",\n            },\n        },\n        num_activite: {\n            type: Sequelize.INTEGER,\n        },\n        Classe_ID: {\n            type: Sequelize.STRING,\n            references: {\n                model: "classe",\n                key: "id",\n            },\n        },\n        Lesson_ID: {\n            type: Sequelize.STRING,\n            references: {\n                model: "lesson",\n                key: "id",\n            },\n        },\n        nac_id: {\n            type: Sequelize.STRING,\n            references: {\n                model: "nac",\n                key: "id",\n            },\n        },\n        pk_ac_id: {\n            type: Sequelize.STRING,\n            primaryKey: true,\n        },\n    });\n\n    return Activite;\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.activite = require("./ac_clnt.model")(sequelize, Sequelize);\n...\n// activite => classe\ndb.classes.hasMany(db.activite, { foreignKey: "Classe_ID" });\ndb.activite.belongsTo(db.classes, { foreignKey: "Classe_ID" });\n\n// activite => lesson\ndb.lessons.hasMany(db.activite, { foreignKey: "Lesson_ID" });\ndb.activite.belongsTo(db.lessons, { foreignKey: "Lesson_ID" });\n\n// activite => type_exo\ndb.type_exercice.hasMany(db.activite, { foreignKey: "typrep" });\ndb.activite.belongsTo(db.type_exercice, { foreignKey: "typrep" });\n\n// activite => natureactiv\ndb.nAc.hasMany(db.activite, { foreignKey: "nac_id" });\ndb.activite.belongsTo(db.nAc, { foreignKey: "nac_id" });\n...\n')),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.ac_clnt.controllers.js"',title:'"./src/controllers/alecol.ac_clnt.controllers.js"'},'const db = require("../models");\nconst Activite = db.activite;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les activit\xe9s de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const activiteid = req.query.pk_ac_id;\n    const lessonid = req.query.Lesson_ID;\n\n    var nameCondition = activiteid\n        ? { pk_ac_id: { [Op.like]: `${activiteid}` } }\n        : null;\n\n    var fkCondition = lessonid\n        ? { Lesson_ID: { [Op.like]: `${lessonid}` } }\n        : null;\n\n    var condition = nameCondition || fkCondition;\n\n    Activite.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des activit\xe9s.",\n            });\n        });\n};\n\n// Trouver une seule activit\xe9 avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Activite.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de l\'activit\xe9 avec l\'id=" + id,\n            });\n        });\n};\n')),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"route"},"Route"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.ac_clnt.routes.js"',title:'"./src/routes/alecol.ac_clnt.routes.js"'},'module.exports = (app) => {\n    const activite = require("../controllers/alecol.ac_clnt.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les activit\xe9s\n    router.get("/", activite.findAll);\n\n    // R\xe9cup\xe9rer une seule activit\xe9 avec id\n    router.get("/:id", activite.findOne);\n\n    app.use("/api/activite", router);\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.ac_clnt.routes")(app);\n...\n')))}u.isMDXComponent=!0}}]);