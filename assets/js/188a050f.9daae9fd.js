"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[480],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(7294);function c(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){c(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,c=function(e,n){if(null==e)return{};var r,t,c={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(c[r]=e[r]);return c}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var a=t.createContext({}),i=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=i(e.components);return t.createElement(a.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,c=e.mdxType,o=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(r),m=c,g=u["".concat(a,".").concat(m)]||u[m]||d[m]||o;return r?t.createElement(g,s(s({ref:n},p),{},{components:r})):t.createElement(g,s({ref:n},p))}));function m(e,n){var r=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var o=r.length,s=new Array(o);s[0]=u;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:c,s[1]=l;for(var i=2;i<o;i++)s[i]=r[i];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9502:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var t=r(7462),c=(r(7294),r(3905));const o={},s="Comp\xe9tence g\xe9n\xe9rale",l={unversionedId:"Backend_Serveur/Sources/MPD_Competences/C_CC_CG",id:"Backend_Serveur/Sources/MPD_Competences/C_CC_CG",title:"Comp\xe9tence g\xe9n\xe9rale",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/2-MPD_Competences/3-C_CC_CG.mdx",sourceDirName:"2-Backend_Serveur/Sources/2-MPD_Competences",slug:"/Backend_Serveur/Sources/MPD_Competences/C_CC_CG",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/C_CC_CG",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/2-MPD_Competences/3-C_CC_CG.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"Cat\xe9gorie de comp\xe9tences",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/CatComp"},next:{title:"D\xe9pendance des comp\xe9tences g\xe9n\xe9rales",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_Competences/Dep_CG"}},a={},i=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],p={toc:i};function d(e){let{components:n,...r}=e;return(0,c.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"comp\xe9tence-g\xe9n\xe9rale"},"Comp\xe9tence g\xe9n\xe9rale"),(0,c.kt)("h2",{id:"service"},"Service"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.c_cc_cg.service.js"',title:'"./src/services/alecol.c_cc_cg.service.js"'},'import http from "../http-common";\n\nclass CompGenDataService {\n    getAll() {\n        return http.get("/compgen");\n    }\n\n    get(id) {\n        return http.get(`/compgen/${id}`);\n    }\n\n    findByClasseId(Classe_ID) {\n        return http.get(`/compgen?classe_id=${Classe_ID}`);\n    }\n    \n    findByCatCompId(fk_catcomp_id) {\n        return http.get(`/compgen?fk_catcomp_id=${fk_catcomp_id}`);\n    }\n}\n\nexport default new CompGenDataService();\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'...\nconst CompGenService = require("./alecol.compgen.service");\n...\nconst Services = {};\n...\nServices.CompGenService = CompGenService.default;\n...\nexport default Services;\n')),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/c_cc_cg.model.js"',title:'"./src/models/c_cc_cg.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const CompGen = sequelize.define("c_cc_cg", {\n        Classe_ID: {\n            type: Sequelize.STRING,\n            references: {\n                model: "classe",\n                key: "id",\n            },\n        },\n        fk_catcomp_id: {\n            type: Sequelize.STRING,\n            references: {\n                model: "catcomp",\n                key: "id",\n            },\n        },\n        id: {\n            type: Sequelize.STRING,\n            primaryKey: true,\n        },\n        nom: {\n            type: Sequelize.STRING,\n        },\n        description: {\n            type: Sequelize.STRING,\n        },\n    });\n\n    return CompGen;\n};\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.compgen = require("./c_cc_cg.model")(sequelize, Sequelize);\n...\n// compgen => catcomp\ndb.catcomp.hasMany(db.compgen, { foreignKey: "fk_catcomp_id" });\ndb.compgen.belongsTo(db.catcomp, { foreignKey: "fk_catcomp_id" });\n\n// compgen => classe\ndb.classes.hasMany(db.compgen, { foreignKey: "Classe_ID" });\ndb.compgen.belongsTo(db.classes, { foreignKey: "Classe_ID" });\n...\n')),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.c_cc_cg.controllers.js"',title:'"./src/controllers/alecol.c_cc_cg.controllers.js"'},'const db = require("../models");\nconst CompGen = db.compgen;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les comp\xe9tences g\xe9n\xe9rales de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const classeid = req.query.Classe_ID;\n    const catcompid = req.query.fk_catcomp_id;\n\n    var classeCondition = classeid ? { Classe_ID: { [Op.like]: `${classeid}` } } : null;\n    var catcompCondition = catcompid ? { fk_catcomp_id: { [Op.like]: `${catcompid}` } } : null;\n\n    var condition = classeCondition || catcompCondition;\n\n    CompGen.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des comp\xe9tences g\xe9n\xe9rales.",\n            });\n        });\n};\n\n// Trouver une seule comp\xe9tence g\xe9n\xe9rale avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    CompGen.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de la comp\xe9tence g\xe9n\xe9rale avec l\'id=" + id,\n            });\n        });\n};\n')),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"route"},"Route"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.c_cc_cg.routes.js"',title:'"./src/routes/alecol.c_cc_cg.routes.js"'},'module.exports = (app) => {\n    const compgen = require("../controllers/alecol.c_cc_cg.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les comp\xe9tences g\xe9n\xe9rales\n    router.get("/", compgen.findAll);\n\n    // R\xe9cup\xe9rer une seule comp\xe9tence g\xe9n\xe9rale avec id\n    router.get("/:id", compgen.findOne);\n\n    app.use("/api/compgen", router);\n};\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.c_cc_cg.routes")(app);\n...\n')))}d.isMDXComponent=!0}}]);