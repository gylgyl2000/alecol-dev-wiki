"use strict";(self.webpackChunkalecol_dev_wiki=self.webpackChunkalecol_dev_wiki||[]).push([[8710],{3905:(e,n,s)=>{s.d(n,{Zo:()=>a,kt:()=>_});var r=s(7294);function t(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}function o(e,n){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),s.push.apply(s,r)}return s}function i(e){for(var n=1;n<arguments.length;n++){var s=null!=arguments[n]?arguments[n]:{};n%2?o(Object(s),!0).forEach((function(n){t(e,n,s[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(s,n))}))}return e}function l(e,n){if(null==e)return{};var s,r,t=function(e,n){if(null==e)return{};var s,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)s=o[r],n.indexOf(s)>=0||(t[s]=e[s]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)s=o[r],n.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(t[s]=e[s])}return t}var c=r.createContext({}),p=function(e){var n=r.useContext(c),s=n;return e&&(s="function"==typeof e?e(n):i(i({},n),e)),s},a=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var s=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,a=l(e,["components","mdxType","originalType","parentName"]),u=p(s),_=t,m=u["".concat(c,".").concat(_)]||u[_]||d[_]||o;return s?r.createElement(m,i(i({ref:n},a),{},{components:s})):r.createElement(m,i({ref:n},a))}));function _(e,n){var s=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=s.length,i=new Array(o);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var p=2;p<o;p++)i[p]=s[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,s)}u.displayName="MDXCreateElement"},3784:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=s(3117),t=(s(7294),s(3905));const o={},i="R\xe9ponses dessin \xe0 points",l={unversionedId:"Backend_Serveur/Sources/MPD_exercices/ReponsesDessinPoints",id:"Backend_Serveur/Sources/MPD_exercices/ReponsesDessinPoints",title:"R\xe9ponses dessin \xe0 points",description:"Service",source:"@site/docs/2-Backend_Serveur/Sources/3-MPD_exercices/13-ReponsesDessinPoints.mdx",sourceDirName:"2-Backend_Serveur/Sources/3-MPD_exercices",slug:"/Backend_Serveur/Sources/MPD_exercices/ReponsesDessinPoints",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/ReponsesDessinPoints",draft:!1,editUrl:"https://github.com/gylgyl2000/alecol-dev-wiki/docs/2-Backend_Serveur/Sources/3-MPD_exercices/13-ReponsesDessinPoints.mdx",tags:[],version:"current",sidebarPosition:13,frontMatter:{},sidebar:"BackendSidebar",previous:{title:"R\xe9ponses trous",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/ReponsesTrous"},next:{title:"Score \xe9l\xe8ves",permalink:"/alecol-dev-wiki/docs/Backend_Serveur/Sources/MPD_exercices/ScoreEleves"}},c={},p=[{value:"Service",id:"service",level:2},{value:"Mod\xe8le",id:"mod\xe8le",level:2},{value:"Contr\xf4leur",id:"contr\xf4leur",level:2},{value:"Route",id:"route",level:2}],a={toc:p};function d(e){let{components:n,...s}=e;return(0,t.kt)("wrapper",(0,r.Z)({},a,s,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"r\xe9ponses-dessin-\xe0-points"},"R\xe9ponses dessin \xe0 points"),(0,t.kt)("h2",{id:"service"},"Service"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/alecol.reponse_dessin_points.service.js"',title:'"./src/services/alecol.reponse_dessin_points.service.js"'},'import http from "../http-common";\n\nclass ReponseDessinPointsDataService {\n    getAll() {\n        return http.get("/reponsesDessinPoints");\n    }\n\n    get(id) {\n        return http.get(`/reponsesDessinPoints/${id}`);\n    }\n\n    findByExoId(fk_exo_id) {\n        return http.get(`/reponsesDessinPoints?fk_exo_id=${fk_exo_id}`);\n    }\n}\n\nexport default new ReponseDessinPointsDataService();\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/services/index.js"',title:'"./src/services/index.js"'},'const ReponseDessinPointsService = require("./alecol.reponse_dessin_points.service");\n...\nconst Services = {};\n...\nServices.ReponseDessinPointsService = ReponseDessinPointsService.default;\n...\nexport default Services;\n')),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"mod\xe8le"},"Mod\xe8le"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/reponse_dessin_points.model.js"',title:'"./src/models/reponse_dessin_points.model.js"'},'module.exports = (sequelize, Sequelize) => {\n    const Reponses_dessin_points = sequelize.define("reponses_dessin_points", {\n        FK_Exo_ID: {\n            type: Sequelize.STRING,\n            primaryKey: true,\n            references: {\n                model: "exercices",\n                key: "pk_exo_id",\n            },\n        },\n        numero_trait: {\n            type: Sequelize.INTEGER,\n        },\n        point1_x: {\n            type: Sequelize.INTEGER,\n        },\n        point1_y: {\n            type: Sequelize.INTEGER,\n        },\n        point2_x: {\n            type: Sequelize.INTEGER,\n        },\n        point2_y: {\n            type: Sequelize.INTEGER,\n        }\n    });\n\n    return Reponses_dessin_points;\n};\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/models/index.js"',title:'"./src/models/index.js"'},'...\ndb.reponse_dessin_points = require("./reponse_dessin_points.model")(sequelize, Sequelize);\n...\n// reponses_dessin_points => exercices\ndb.exercices.hasMany(db.reponse_dessin_points, { foreignKey: "FK_Exo_ID" });\ndb.reponse_dessin_points.belongsTo(db.exercices, { foreignKey: "FK_Exo_ID" });\n...\n')),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"contr\xf4leur"},"Contr\xf4leur"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/controllers/alecol.reponse_dessin_points.controllers.js"',title:'"./src/controllers/alecol.reponse_dessin_points.controllers.js"'},'const db = require("../models");\nconst Reponse = db.reponse_dessin_points;\nconst Op = db.Sequelize.Op;\n\n// R\xe9cup\xe9rer toutes les r\xe9ponses dessin points de la base de donn\xe9es\nexports.findAll = (req, res) => {\n    const exoId = req.query.fk_exo_id;\n\n    var condition = exoId ? { FK_Exo_ID: { [Op.like]: `${exoId}` } } : null;\n\n    Reponse.findAll({ where: condition })\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message:\n                err.message || "Une erreur s\'est produite lors de la r\xe9cup\xe9ration des r\xe9ponses dessin points.",\n            });\n        });\n};\n\n// Trouver une seule r\xe9ponse dessin points avec un identifiant\nexports.findOne = (req, res) => {\n    const id = req.params.id;\n\n    Reponse.findByPk(id)\n        .then((data) => {\n            res.send(data);\n        })\n        .catch((err) => {\n            res.status(500).send({\n                message: "Erreur lors de la r\xe9cup\xe9ration de la r\xe9ponse dessin points avec l\'id=" + id,\n            });\n        });\n};\n')),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"route"},"Route"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/routes/alecol.reponse_dessin_points.routes.js"',title:'"./src/routes/alecol.reponse_dessin_points.routes.js"'},'module.exports = (app) => {\n    const reponse_dessin_points = require("../controllers/alecol.reponse_dessin_points.controllers");\n\n    var router = require("express").Router();\n\n    // R\xe9cup\xe9rer toutes les r\xe9ponses dessin points\n    router.get("/", reponse_dessin_points.findAll);\n\n    // R\xe9cup\xe9rer une seule r\xe9ponse dessin points avec id\n    router.get("/:id", reponse_dessin_points.findOne);\n\n    app.use("/api/reponsesDessinPoints", router);\n};\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},'...\nrequire("./src/routes/alecol.reponse_dessin_points.routes")(app);\n...\n')))}d.isMDXComponent=!0}}]);